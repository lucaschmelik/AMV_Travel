// <auto-generated />
using System;
using AMV_Travel.DataAccess.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AMV_Travel.Migrations
{
    [DbContext(typeof(AMVContext))]
    [Migration("20240201042941_Creacion_de_seeds_Cliente-Excursion-Hotel")]
    partial class Creacion_de_seeds_ClienteExcursionHotel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.26")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AMV_Travel.Models.Clases.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clientes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Apellido = "García",
                            Correo = "lucas@example.com",
                            Nombre = "Lucas",
                            Telefono = "123456789"
                        },
                        new
                        {
                            Id = 2,
                            Apellido = "Pérez",
                            Correo = "martin@example.com",
                            Nombre = "Martín",
                            Telefono = "987654321"
                        },
                        new
                        {
                            Id = 3,
                            Apellido = "Rodríguez",
                            Correo = "nicolas@example.com",
                            Nombre = "Nicolas",
                            Telefono = "555555555"
                        },
                        new
                        {
                            Id = 4,
                            Apellido = "López",
                            Correo = "alejandra@example.com",
                            Nombre = "Alejandra",
                            Telefono = "666666666"
                        },
                        new
                        {
                            Id = 5,
                            Apellido = "Fernández",
                            Correo = "camila@example.com",
                            Nombre = "Camila",
                            Telefono = "777777777"
                        });
                });

            modelBuilder.Entity("AMV_Travel.Models.Clases.Excursion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<int>("Precio")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Excursiones");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "Aventura en la montaña",
                            FechaFin = new DateTime(2024, 2, 3, 1, 29, 41, 112, DateTimeKind.Local).AddTicks(2153),
                            FechaInicio = new DateTime(2024, 2, 1, 1, 29, 41, 112, DateTimeKind.Local).AddTicks(2144),
                            Precio = 100
                        },
                        new
                        {
                            Id = 2,
                            Descripcion = "Tour histórico",
                            FechaFin = new DateTime(2024, 2, 4, 1, 29, 41, 112, DateTimeKind.Local).AddTicks(2158),
                            FechaInicio = new DateTime(2024, 2, 1, 1, 29, 41, 112, DateTimeKind.Local).AddTicks(2157),
                            Precio = 150
                        },
                        new
                        {
                            Id = 3,
                            Descripcion = "Exploración de la selva",
                            FechaFin = new DateTime(2024, 2, 5, 1, 29, 41, 112, DateTimeKind.Local).AddTicks(2159),
                            FechaInicio = new DateTime(2024, 2, 1, 1, 29, 41, 112, DateTimeKind.Local).AddTicks(2159),
                            Precio = 120
                        },
                        new
                        {
                            Id = 4,
                            Descripcion = "Viaje en globo aerostático",
                            FechaFin = new DateTime(2024, 2, 6, 1, 29, 41, 112, DateTimeKind.Local).AddTicks(2160),
                            FechaInicio = new DateTime(2024, 2, 1, 1, 29, 41, 112, DateTimeKind.Local).AddTicks(2160),
                            Precio = 200
                        },
                        new
                        {
                            Id = 5,
                            Descripcion = "Recorrido en bicicleta",
                            FechaFin = new DateTime(2024, 2, 7, 1, 29, 41, 112, DateTimeKind.Local).AddTicks(2161),
                            FechaInicio = new DateTime(2024, 2, 1, 1, 29, 41, 112, DateTimeKind.Local).AddTicks(2161),
                            Precio = 180
                        });
                });

            modelBuilder.Entity("AMV_Travel.Models.Clases.Hotel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Precio")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Hoteles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Direccion = "Calle de la Luna 123",
                            FechaFin = new DateTime(2024, 2, 3, 1, 29, 41, 112, DateTimeKind.Local).AddTicks(2247),
                            FechaInicio = new DateTime(2024, 2, 1, 1, 29, 41, 112, DateTimeKind.Local).AddTicks(2246),
                            Nombre = "Hotel Estrella",
                            Precio = 200
                        },
                        new
                        {
                            Id = 2,
                            Direccion = "Avenida del Sol 456",
                            FechaFin = new DateTime(2024, 2, 4, 1, 29, 41, 112, DateTimeKind.Local).AddTicks(2249),
                            FechaInicio = new DateTime(2024, 2, 1, 1, 29, 41, 112, DateTimeKind.Local).AddTicks(2248),
                            Nombre = "Gran Hotel Oasis",
                            Precio = 250
                        },
                        new
                        {
                            Id = 3,
                            Direccion = "Ruta de la Cima 789",
                            FechaFin = new DateTime(2024, 2, 5, 1, 29, 41, 112, DateTimeKind.Local).AddTicks(2250),
                            FechaInicio = new DateTime(2024, 2, 1, 1, 29, 41, 112, DateTimeKind.Local).AddTicks(2250),
                            Nombre = "Hotel de las Montañas",
                            Precio = 220
                        },
                        new
                        {
                            Id = 4,
                            Direccion = "Camino al Bosque 101",
                            FechaFin = new DateTime(2024, 2, 6, 1, 29, 41, 112, DateTimeKind.Local).AddTicks(2251),
                            FechaInicio = new DateTime(2024, 2, 1, 1, 29, 41, 112, DateTimeKind.Local).AddTicks(2251),
                            Nombre = "Hotel Natura",
                            Precio = 300
                        },
                        new
                        {
                            Id = 5,
                            Direccion = "Paseo Marítimo 202",
                            FechaFin = new DateTime(2024, 2, 7, 1, 29, 41, 112, DateTimeKind.Local).AddTicks(2252),
                            FechaInicio = new DateTime(2024, 2, 1, 1, 29, 41, 112, DateTimeKind.Local).AddTicks(2252),
                            Nombre = "Hotel del Mar",
                            Precio = 280
                        });
                });

            modelBuilder.Entity("AMV_Travel.Models.Clases.Paquete", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExcursionId")
                        .HasColumnType("int");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ExcursionId");

                    b.HasIndex("HotelId");

                    b.ToTable("Paquetes");
                });

            modelBuilder.Entity("AMV_Travel.Models.Clases.Reserva", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("PaqueteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("PaqueteId");

                    b.ToTable("Reservas");
                });

            modelBuilder.Entity("AMV_Travel.Models.Clases.Paquete", b =>
                {
                    b.HasOne("AMV_Travel.Models.Clases.Excursion", "Excursion")
                        .WithMany()
                        .HasForeignKey("ExcursionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AMV_Travel.Models.Clases.Hotel", "Hotel")
                        .WithMany()
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Excursion");

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("AMV_Travel.Models.Clases.Reserva", b =>
                {
                    b.HasOne("AMV_Travel.Models.Clases.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AMV_Travel.Models.Clases.Paquete", "Paquete")
                        .WithMany()
                        .HasForeignKey("PaqueteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Paquete");
                });
#pragma warning restore 612, 618
        }
    }
}
